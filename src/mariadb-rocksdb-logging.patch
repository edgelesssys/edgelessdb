diff --git a/storage/rocksdb/ha_rocksdb.cc b/storage/rocksdb/ha_rocksdb.cc
index c053be8b..9bcd6fc5 100644
--- a/storage/rocksdb/ha_rocksdb.cc
+++ b/storage/rocksdb/ha_rocksdb.cc
@@ -594,6 +594,7 @@ static unsigned long  // NOLINT(runtime/int)
     rocksdb_persistent_cache_size_mb;
 static ulong rocksdb_info_log_level;
 static char *rocksdb_wal_dir;
+static char *rocksdb_db_log_dir;
 static char *rocksdb_persistent_cache_path;
 static ulong rocksdb_index_type;
 static uint32_t rocksdb_flush_log_at_trx_commit;
@@ -1308,6 +1309,11 @@ static MYSQL_SYSVAR_STR(wal_dir, rocksdb_wal_dir,
                         "DBOptions::wal_dir for RocksDB", nullptr, nullptr,
                         rocksdb_db_options->wal_dir.c_str());
 
+static MYSQL_SYSVAR_STR(db_log_dir, rocksdb_db_log_dir,
+                        PLUGIN_VAR_RQCMDARG | PLUGIN_VAR_READONLY,
+                        "DBOptions::db_log_dir for RocksDB", nullptr, nullptr,
+                        rocksdb_db_options->db_log_dir.c_str());
+
 static MYSQL_SYSVAR_STR(
     persistent_cache_path, rocksdb_persistent_cache_path,
     PLUGIN_VAR_RQCMDARG | PLUGIN_VAR_READONLY,
@@ -2024,6 +2030,7 @@ static struct st_mysql_sys_var *rocksdb_system_variables[] = {
     MYSQL_SYSVAR(max_total_wal_size),
     MYSQL_SYSVAR(use_fsync),
     MYSQL_SYSVAR(wal_dir),
+    MYSQL_SYSVAR(db_log_dir),
     MYSQL_SYSVAR(persistent_cache_path),
     MYSQL_SYSVAR(persistent_cache_size_mb),
     MYSQL_SYSVAR(delete_obsolete_files_period_micros),
@@ -5354,6 +5361,7 @@ static int rocksdb_init_func(void *const p) {
   }
 
   rocksdb_db_options->delayed_write_rate = rocksdb_delayed_write_rate;
+  rocksdb_db_options->db_log_dir = rocksdb_db_log_dir;
 
   std::shared_ptr<Rdb_logger> myrocks_logger = std::make_shared<Rdb_logger>();
   rocksdb::Status s = rocksdb::CreateLoggerFromOptions(
@@ -5751,6 +5759,11 @@ static int rocksdb_init_func(void *const p) {
     directories.push_back(myrocks::rocksdb_wal_dir);
   }
 
+  // 3. LOG logs.
+  if (myrocks::rocksdb_db_log_dir && *myrocks::rocksdb_db_log_dir) {
+    directories.push_back(myrocks::rocksdb_db_log_dir);
+  }
+
 #if !defined(_WIN32) && !defined(__APPLE__)
   io_watchdog = new Rdb_io_watchdog(std::move(directories));
   io_watchdog->reset_timeout(rocksdb_io_write_timeout_secs);
